// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var emailMessages = EmailMessages.FromJson(jsonString);

using System;
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Yambr.ELMA.Email.API.Models
{
    public partial class EmailMessagesPage
    {
        [JsonProperty("messages")]
        public Message[] Messages { get; set; }

        [JsonProperty("from")]
        public DateTimeOffset From { get; set; }

        [JsonProperty("to")]
        public DateTimeOffset To { get; set; }

        [JsonProperty("skip")]
        public long Skip { get; set; }

        [JsonProperty("size")]
        public long Size { get; set; }

        [JsonProperty("count")]
        public long Count { get; set; }
    }

    public partial class Message
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("from")]
        public Participant[] From { get; set; }

        [JsonProperty("to")]
        public Participant[] To { get; set; }

        [JsonProperty("date")]
        public DateTime? Date { get; set; }

        [JsonProperty("direction")]
        public string Direction { get; set; }

        [JsonProperty("mainHeader")]
        public string MainHeader { get; set; }

        [JsonProperty("subjectWithoutTags")]
        public string SubjectWithoutTags { get; set; }

        [JsonProperty("subject")]
        public string Subject { get; set; }

        [JsonProperty("owners")]
        public Participant[] Owners { get; set; }
    }

    public partial class Participant
    {
        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("email")]
        public string Email { get; set; }

        [JsonProperty("contact")]
        public long? Contact { get; set; }

        [JsonProperty("user")]
        public long? User { get; set; }
    }

}
